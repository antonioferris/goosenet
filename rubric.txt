#########################################################################################
# TODO: Fill this template out in addition to the code implementation in chatbot.py!    #
#                                                                                       #
# Each "Creative" feature in the rubric has a section below.                            #
# For every feature you chose to implement, replace the "NO" at the end of the relevant #
# lines with "YES".                                                                     #
#                                                                                       #
# You will only receive credit for the features you mark as YES below!                  #
#########################################################################################

FEATURE - Identifying movies without quotation marks and correct capitalization (part 1): NO
FEATURE - Identifying movies without quotation marks and correct capitalization (part 2): YES
FEATURE - Alternate/foreign titles: NO
FEATURE - Disambiguation (part 1): YES
FEATURE - Fine-grained sentiment extraction: NO
FEATURE - Spell-correcting fallback for find_movies_by_title: YES
FEATURE - Extracting sentiment with multiple-movie input: YES
FEATURE - Disambiguation (part 2): YES
FEATURE - Disambiguation (part 3): YES
FEATURE - Dialogue for spell-checking: YES
FEATURE - Dialogue for disambiguation: YES
FEATURE - Communicating sentiments and movies extracted to the user given multiple-movie input: YES
FEATURE - Understanding references to things said previously: NO
FEATURE - Responding to arbitrary input: YES
FEATURE - Speaking very fluently: YES
FEATURE - Identifying and responding to emotions: NO
FEATURE - goosenet has it's own emotional state and variable responses based on it - YES
Did not implement any of the above features: NO

#########################################################################################
# Team Contributions                                                                    #
#########################################################################################
Antonio:
    Wrote recommend function
    Added disambiguation code
    Wrote title_match, used for most of the finding movies by title
    Wrote the process function, created a Goose class to centralize dialogue options
    Decomposed process into recommendation_flow, disambiguate_flow, update_with_preferences, and acquire_movie_preferences
    Added dialogue for extract_sentiment_from_movies
Colin:
    Wrote code to pull the parts of speech of words out of the user input
    Added tons of dialogue options to the Goose class
    Worked on handling extraneous input with nltk
    Wrote binarize
    Tied together ecery other function like (extract_movies, recommend) together with dialogue for the user
    Added lots of dialogue options and randomness to make every conversation feel unique
    Added references to Goose Net through HONK!s and the insidious world takeover
    Added Goose emotional system
    Gave Goose some basic information to respond to extraneous input with.
    Continued to expand Goose Dialogue
Noah:
    Debugged buggy extract_sentiment code written by Antonio :)
    Changed sentiment.txt to reflect the porter-stemmed words from PorterStemmer
    Created structure to parse negations and reverse sentiment accordingly
    Wrote linear algebra backend for the recommend function
    Wrote extract_sentiment_from_movies, which split sentences across movie titles and extracted sentiment within the pieces
    using the recursive get_previous_sentiment function
    Fixed Goosenet's response to 0 sentiment comments
    

#########################################################################################
# Optional: Feel free to include anything else that you want us to know about your      #
# implementation!# 
The goose has a limited knowledge base about itself and can detect when the user asks questions about itself.
The goose can respond what its name is. For example asking "What is your name" has the goose respond Well, my name is Reginald.
The goose has a simple emotional state ranging from pleased to angry which is represented by the range of numbers
10 to -10.
It also detects when you are talking about it. If you say I hate you Goosenet! Goosenet will become more angry.
It also will respond to basic greetings like hi! or hello!
The goose also has some favorite movies, disliking movies like "Father Goose" will make the goose angry
while liking "Father Goose" will make it happy!
If the goose becomes too angry it wil give the user a chance to say something nice about it,
otherwise it will forcefully exit the program.
#########################################################################################


